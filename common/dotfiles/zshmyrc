fpath=(/usr/local/share/zsh-completions $fpath)

## Environments
################

export EDITOR=$(which vim)

case ${OSTYPE} in
linux*)
  os_type="linux" ;;
darwin*)
  os_type="mac" ;;
esac
export os_type

if [ ! -d ~/.zsh ]; then
  mkdir -p ~/.zsh
fi

## 補完機能を有効化
autoload -Uz compinit
compinit -u

## 色を使う
autoload -Uz colors
colors

## Prompt
#PROMPT="[%{${fg[green]}%}%n%{${reset_color}%}@%{${fg[cyan]}%}%m%{${reset_color}%}] %~
#%# "
#PROMPT="%{${fg[gray]}%}(・8・)%{${reset_color}%} "
prompt_content="＞ω ＜/ "
prompt2_content='´╹◡╹`) '
PROMPT=$'%{\e[38;5;227m%}'$prompt_content$'%{\e[m%}'
PROMPT2=$'%{\e[38;5;245m%}'$prompt2_content$'%{\e[m%}'

## 右プロンプト
setopt transient_rprompt
# setopt prompt_subst
autoload -Uz vcs_info
autoload -Uz add-zsh-hook

zstyle ':vcs_info:*' formats '[%s(%b) by %m]'
zstyle ':vcs_info:*' actionformats '[%s(%b|%a) by %m]'
zstyle ':vcs_info:git+set-message:*' hooks git-config-user
function +vi-git-config-user() { hook_com[misc]+=`git config user.email` }
function _vcs_precmd() {
  LANG=en_US.UTF-8 vcs_info
  # 色の設定(灰色)
  RPROMPT=$'%{\e[38;5;008m%}'
  # カレントディレクトリ
  RPROMPT+=%~
  # Gitレポジトリ内であれば情報追加
  [ -n "${vcs_info_msg_0_}" ] && RPROMPT+=' '${vcs_info_msg_0_}
  # 色を元に戻す
  RPROMPT+=$'%{\e[m%}'
}
add-zsh-hook precmd _vcs_precmd

## History
HISTFILE=~/.zsh_history
HISTSIZE=1000000
SAVEHIST=1000000
## zsh間でヒストリを共有する
setopt share_history
## 同じコマンドをヒストリに残さない
setopt hist_ignore_all_dups
## コマンドの余分なスペースを削除する
setopt hist_reduce_blanks

## Directory
## ディレクトリ名でcdする
setopt auto_cd
## cdで自動的にpushdする
setopt auto_pushd
## 重複したディレクトリを追加しない
setopt pushd_ignore_dups

## 補完
## tabキーで補完候補を切り替える
setopt auto_menu
## ワイルドカード展開を使用する
setopt extended_glob
## 補完候補を矢印等で選択
zstyle ':completion:*:default' menu select=1
## 補完能登気に大文字小文字を区別しない
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
## sudoでも補完
zstyle ':completion:*:sudo:*' command-path /usr/local/sbin /usr/local/bin \
/usr/sbin /usr/bin /sbin /bin /usr/X11R6/bin
## コマンド補完
bindkey "^P" history-beginning-search-backward
bindkey "^N" history-beginning-search-forward

bindkey -e

## Other Options
## '#'以降をコメントとして扱う
setopt interactive_comments
## スペルミスの指摘
setopt correct
## 全履歴の表示
function history-all { history -E 1 }

## Dircolors
################
if [ ! -d ~/.zsh/dircolors-solarized ]; then
  git clone git://github.com/seebi/dircolors-solarized ~/.zsh/dircolors-solarized
fi

case ${os_type} in
linux)
  eval $(dircolors ~/.zsh/dircolors-solarized/dircolors.ansi-universal) ;;
mac)
  eval $(gdircolors ~/.zsh/dircolors-solarized/dircolors.ansi-universal) ;;
esac

if [ -n "${LS_COLORS}" ]; then
  zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
fi

## Aliases
################

case ${os_type} in
linux)
  alias ls='ls --color' ;;
mac)
  alias ls='gls --color' ;;
esac

alias la='ls -a'
alias ll='ls -l'
alias lla='ls -al'

alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'

alias vi='vim'

alias mkdir='mkdir -p'

# bundle
alias bi='bundle install'
alias be='bundle exec'
alias bu='bundle update'
alias br='bundle exec rails'
alias bru='bundle exec ruby'
alias bra='bundle exec rake'
alias bp='bundle exec pry'
alias bca='bundle exec cap'

# git
alias gicp='git cherry-pick'

alias diff='diff -u'

alias ssh='cat ~/.ssh/conf.d/config ~/.ssh/conf.d/*.conf > ~/.ssh/config;ssh'

function p() {
  ps -ef | grep $1 | grep -v grep
}



## Includes
##################

if type fzf > /dev/null; then
  source ~/.zsh.d/fzf
fi

## ghq + peco
#################
peco-src() {
    local selected
    selected="$(ghq list --full-path | peco --query="$LBUFFER")"
    if [ -n "$selected" ]; then
        BUFFER="cd $selected"
        zle accept-line
    fi
    zle reset-prompt
}
zle -N peco-src
bindkey '^]' peco-src
